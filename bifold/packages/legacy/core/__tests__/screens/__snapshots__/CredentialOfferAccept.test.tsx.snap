// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displays a credential accept screen renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
  >
    <RCTScrollView
      style={
        Array [
          Object {
            "backgroundColor": "#000000",
            "height": "100%",
            "padding": 20,
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 26,
                  "fontWeight": "bold",
                },
                Object {
                  "fontWeight": "normal",
                  "marginTop": 30,
                  "textAlign": "center",
                },
              ]
            }
            testID="com.ariesbifold:id/CredentialOnTheWay"
          >
            CredentialOffer.CredentialOnTheWay
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginTop": 20,
              },
              Object {
                "alignItems": "center",
                "justifyContent": "flex-end",
                "minHeight": 250,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <
              height={110}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "marginTop": -30,
                    "position": "absolute",
                  },
                ]
              }
              width={110}
            />
            <View
              style={
                Object {
                  "opacity": 0,
                  "transform": Array [
                    Object {
                      "translateY": -90,
                    },
                  ],
                }
              }
            >
              <
                height={110}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "marginLeft": 10,
                      "position": "absolute",
                    },
                  ]
                }
                width={110}
              />
            </View>
            <
              height={140}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
              width={140}
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "margin": 20,
            "marginTop": "auto",
          },
        ]
      }
    >
      <View>
        <View
          accessibilityLabel="Loading.BackToHome"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "#42803E",
              "borderRadius": 4,
              "borderWidth": 2,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="com.ariesbifold:id/BackToHome"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#42803E",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  },
                  false,
                ]
              }
            >
              Loading.BackToHome
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</Modal>
`;

exports[`displays a credential accept screen transitions to offer accepted 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
  >
    <RCTScrollView
      style={
        Array [
          Object {
            "backgroundColor": "#000000",
            "height": "100%",
            "padding": 20,
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 26,
                  "fontWeight": "bold",
                },
                Object {
                  "fontWeight": "normal",
                  "marginTop": 30,
                  "textAlign": "center",
                },
              ]
            }
            testID="com.ariesbifold:id/CredentialAddedToYourWallet"
          >
            CredentialOffer.CredentialAddedToYourWallet
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginTop": 20,
              },
              Object {
                "alignItems": "center",
                "justifyContent": "flex-end",
                "minHeight": 250,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              collapsable={false}
              nativeID="animatedComponent"
              style={
                Object {
                  "alignItems": "center",
                  "marginBottom": 10,
                  "opacity": 0,
                }
              }
            >
              <
                height={45}
                width={45}
              />
            </View>
            <View>
              <
                height={110}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "marginTop": -30,
                      "position": "absolute",
                    },
                  ]
                }
                width={110}
              />
              <View
                collapsable={false}
                nativeID="animatedComponent"
                style={
                  Object {
                    "opacity": 0,
                    "transform": Array [
                      Object {
                        "translateY": -90,
                      },
                    ],
                  }
                }
              >
                <
                  height={110}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "marginLeft": 10,
                        "position": "absolute",
                      },
                    ]
                  }
                  width={110}
                />
              </View>
              <
                height={140}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ]
                }
                width={140}
              />
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "margin": 20,
            "marginTop": "auto",
          },
        ]
      }
    >
      <View>
        <View
          accessibilityLabel="Global.Done"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#42803E",
              "borderRadius": 4,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="com.ariesbifold:id/Done"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  },
                  false,
                ]
              }
            >
              Global.Done
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</Modal>
`;

exports[`displays a credential accept screen transitions to taking too delay message 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <RNCSafeAreaView
    style={
      Object {
        "backgroundColor": "#000000",
      }
    }
  >
    <RCTScrollView
      style={
        Array [
          Object {
            "backgroundColor": "#000000",
            "height": "100%",
            "padding": 20,
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 26,
                  "fontWeight": "bold",
                },
                Object {
                  "fontWeight": "normal",
                  "marginTop": 30,
                  "textAlign": "center",
                },
              ]
            }
            testID="com.ariesbifold:id/CredentialOnTheWay"
          >
            CredentialOffer.CredentialOnTheWay
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginTop": 20,
              },
              Object {
                "alignItems": "center",
                "justifyContent": "flex-end",
                "minHeight": 250,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "column",
                },
              ]
            }
          >
            <
              height={110}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "marginTop": -30,
                    "position": "absolute",
                  },
                ]
              }
              width={110}
            />
            <View
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": -16.252128433746066,
                    },
                  ],
                }
              }
            >
              <
                height={110}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "marginLeft": 10,
                      "position": "absolute",
                    },
                  ]
                }
                width={110}
              />
            </View>
            <
              height={140}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
              width={140}
            />
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
              Object {
                "marginTop": 20,
                "textAlign": "center",
              },
            ]
          }
          testID="com.ariesbifold:id/TakingTooLong"
        >
          Connection.TakingTooLong
        </Text>
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "margin": 20,
            "marginTop": "auto",
          },
        ]
      }
    >
      <View>
        <View
          accessibilityLabel="Loading.BackToHome"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderColor": "#42803E",
              "borderRadius": 4,
              "borderWidth": 2,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="com.ariesbifold:id/BackToHome"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#42803E",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  },
                  false,
                ]
              }
            >
              Loading.BackToHome
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</Modal>
`;
